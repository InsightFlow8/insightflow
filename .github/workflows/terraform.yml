name: Terraform CI/CD

on:
  workflow_dispatch:  # 允许手动触发工作流
  push:
    branches: [main]
    paths:
      - 'terraform/**'
      - '.github/workflows/**'
      - 'terraform/assets/**'
      # - 'snowflake_upload/1.1_batch_ingestion_lambda_function.py'

permissions:
  contents: read

jobs:
  terraform:
    name: Apply Terraform
    runs-on: ubuntu-latest
    env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-southeast-2
          
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}

          TF_VAR_aws_region: ap-southeast-2
          TF_VAR_lambda_function_name: batch_snowflake_ingestion_1_1
          TF_VAR_lambda_handler: lambda_function.lambda_handler
          TF_VAR_lambda_runtime: python3.13
          TF_VAR_lambda_zip_path: ./assets/1.1_batch_ingestion_lambda.zip  # 是否应该在这里修改.zip文件路径
          TF_VAR_bucket_name: imba-test-aaron-landing
          TF_VAR_eventbridge_schedule_expression: cron(0 14 30 * ? *)  # UTC 14:00 = 0:00 Sydney
          TF_VAR_lambda_role_name: lambda_batch_ingestion_role

          TF_VAR_snowflake_user: ${{ secrets.SNOWFLAKE_USER }}
          TF_VAR_snowflake_password: ${{ secrets.SNOWFLAKE_PASSWORD }}
          TF_VAR_snowflake_account: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          TF_VAR_snowflake_role: ${{ secrets.SNOWFLAKE_ROLE }}
          TF_VAR_snowflake_warehouse: ${{ secrets.SNOWFLAKE_WAREHOUSE }}


    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5  # 可根据你 WSL 中已安装版本修改

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Format Check
        run: terraform fmt -check
        working-directory: terraform

      - name: Terraform Plan
        run: |
          echo "Using TF_VAR_ variables from environment"
          terraform plan -input=false
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform
